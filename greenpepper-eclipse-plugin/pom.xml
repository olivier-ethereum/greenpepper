<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>greenpepper-open</artifactId>
		<groupId>com.github.strator-dev.greenpepper</groupId>
		<version>4.0-beta3-SNAPSHOT</version>
	</parent>

	<description>GreenPepper Eclipse Plugin</description>

	<properties>
		<tycho.version>0.24.0</tycho.version>
	</properties>

	<!-- - Basic Project Information -->
	<artifactId>com.greenpepper.eclipse</artifactId>
	<packaging>eclipse-plugin</packaging>
	<name>GreenPepper Eclipse Plugin</name>


	<!-- - Dependencies that we want for all modules -->
	<dependencies>
		<!-- **** Basic dependencies **** -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!-- *** GP dependencies *** -->
		<dependency>
			<groupId>com.github.strator-dev.greenpepper</groupId>
			<artifactId>greenpepper-client</artifactId>
			<classifier>complete</classifier>
			<version>${greenpepper.core.version}</version>
		</dependency>
		<!-- **** Test level (not distributed) dependencies **** -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit-dep</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<build>
		<resources>
			<!-- Add the resources that are outside of Maven's conventional resource directory. These resources are in the root because 
				eclipse requires them there. -->
			<resource>
				<directory>${basedir}</directory>
				<includes>
					<include>plugin.xml</include>
					<include>icons/**/*.*</include>
				</includes>
			</resource>
			<!-- Also include default resources directory -->
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<pomDependencies>consider</pomDependencies>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho.version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<version>${tycho.version}</version>
				<extensions>true</extensions>
				<configuration>
					<strictBinIncludes>false</strictBinIncludes>
				</configuration>
			</plugin>
			<!-- Overrides parent configuration to generate an eclipse PDE project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<!-- Add missing eclipse classpath entries (missing for both PDE and non-PDE) -->
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.pde.core.requiredPlugins</classpathContainer>
					</classpathContainers>
				</configuration>
			</plugin>
			<!-- OSGI bundle configuration -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Activator>org.s4i.Activator</Bundle-Activator>
						<!-- Eclipse dependencies must be declared as Require-Bundle instead of (or in addition to) Import-Package. Otherwise, 
							the generated eclipse project will not property link to the eclipse dependencies in the workspace. -->


						<Require-Bundle>
							org.eclipse.ui,
							org.eclipse.core.runtime,
							org.eclipse.debug.core,
							org.eclipse.debug.ui,
							org.eclipse.jdt.launching,
							org.eclipse.jdt.debug.ui,
							org.eclipse.core.resources,
							org.eclipse.jdt.core,
							org.eclipse.jdt.ui,
							org.eclipse.ui.ide,
							org.eclipse.jdt.junit,
							org.eclipse.ui.ide.application
						</Require-Bundle>
						<!-- Exclude eclipse imports since they are specified in Require-Bundle. -->
						<Import-Package>
							!org.eclipse.*,
							*
						</Import-Package>
						<!-- Use "-removeheaders" BND argument to remove unwanted headers. Must be all on one line. -->
						<_removeheaders>Ignore-Package,Include-Resource,Private-Package</_removeheaders>
						<!-- Apply "-failok" BND argument. Don't care if BND can't find some packages -->
						<_failok>true</_failok>
					</instructions>
				</configuration>
			</plugin>
			
		</plugins>

	</build>
	<repositories>
		<repository>
			<id>luna</id>
			<layout>p2</layout>
			<url>http://download.eclipse.org/releases/luna</url>
		</repository>
	</repositories>
	<scm>
		<connection>https://github.com/greenpeppersoftware/greenpepper.git</connection>
		<url>https://github.com/greenpeppersoftware/greenpepper/</url>
	</scm>
</project>
